{"level":"error","message":"Order not found: f47a1688-65a4-43d8-b9c2-94856f6d3194","timestamp":"2024-05-24T07:09:34.743Z"}
{"level":"error","message":"Order not found: 1889d32b-0785-4328-9bb4","timestamp":"2024-05-24T07:10:01.674Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T08:32:59.091Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T08:32:59.685Z"}
{"level":"error","message":"Order not found: 1889d32b-0785-4328-9bb4-c6375733545b","timestamp":"2024-05-24T08:35:36.314Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T09:38:48.580Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T09:38:49.062Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:06:02.513Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:06:02.960Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:06:04.366Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:06:04.892Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:06:05.319Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:06:05.644Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:06:05.888Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:06:06.209Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:12:46.360Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:12:46.744Z"}
{"level":"error","message":"Error in allOrders: \nInvalid `prisma.order.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'Product'.","timestamp":"2024-05-24T10:14:28.694Z"}
{"level":"error","message":"Error in allOrders: \nInvalid `prisma.order.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'Product'.","timestamp":"2024-05-24T10:14:38.239Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:15:16.476Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:15:16.944Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:15:17.164Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:15:17.437Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:15:17.718Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:15:17.803Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:15:17.992Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:15:18.051Z"}
{"level":"error","message":"Error in allOrders: \nInvalid `prisma.order.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'product'.","timestamp":"2024-05-24T10:39:11.723Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:39:11.727Z"}
{"level":"error","message":"Error in allOrders: \nInvalid `prisma.order.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'product'.","timestamp":"2024-05-24T10:39:12.092Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-05-24T10:39:12.394Z"}
{"level":"error","message":"Error in allOrders: \nInvalid `prisma.order.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'product'.","timestamp":"2024-05-24T10:39:37.162Z"}
{"level":"error","message":"Error in allOrders: \nInvalid `prisma.order.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'product'.","timestamp":"2024-05-24T10:39:37.493Z"}
{"level":"error","message":"Error in allOrders: \nInvalid `prisma.order.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'product'.","timestamp":"2024-05-24T10:39:44.610Z"}
{"level":"error","message":"Error in allOrders: \nInvalid `prisma.order.findMany()` invocation:\n\n\nCannot select both '$scalars: true' and a specific scalar field 'product'.","timestamp":"2024-05-24T10:39:45.148Z"}
{"level":"error","message":"Error in addOrder: \nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    productId: \"3e0f20d2-7080-4419-ae04-2587a7aa8d3c\",\n    quantity: 1,\n    ~~~~~~~~\n    total: 1,\n    userId: \"6cd5037f-9a1d-4bd3-bc96-59ef633e4dc6\",\n?   id?: String,\n?   createdAt?: DateTime,\n?   productsInOrder?: ProductInOrderUncheckedCreateNestedManyWithoutOrderInput\n  }\n}\n\nUnknown argument `quantity`. Available options are marked with ?.","timestamp":"2024-05-24T10:45:19.098Z"}
{"level":"error","message":"Error in addOrder: productsInOrder is not defined","timestamp":"2024-05-24T10:47:24.998Z"}
<<<<<<< HEAD
{"level":"error","message":"Error in addOrder: productsInOrder is not defined","timestamp":"2024-08-06T10:49:40.377Z"}
{"level":"error","message":"Error in addOrder: productsInOrder is not defined","timestamp":"2024-08-06T10:51:24.598Z"}
{"level":"error","message":"Error in addOrder: productsInOrder is not defined","timestamp":"2024-08-06T10:55:56.918Z"}
{"level":"error","message":"Error in addOrder: \nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    productsInOrder: {\n      create: {\n        product: {\n          connect: {\n            id: \"3e0f20d2-7080-4419-ae04-2587a7aa8d3c\"\n          }\n        },\n        quantity: \"1\",\n                  ~~~\n        total: \"25.00\"\n      }\n    },\n    userId: \"6cd5037f-9a1d-4bd3-bc96-59ef633e4dc6\"\n  },\n  include: {\n    productsInOrder: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `quantity`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-08-06T13:29:38.358Z"}
{"level":"error","message":"Error in addOrder: \nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    productsInOrder: {\n      create: {\n        product: {\n          connect: {\n            id: \"3e0f20d2-7080-4419-ae04-2587a7aa8d3c\"\n          }\n        },\n        quantity: 1,\n        total: \"25.00\"\n               ~~~~~~~\n      }\n    },\n    userId: \"6cd5037f-9a1d-4bd3-bc96-59ef633e4dc6\"\n  },\n  include: {\n    productsInOrder: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `total`: Invalid value provided. Expected Float, provided String.","timestamp":"2024-08-06T13:31:02.216Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-06T14:03:32.260Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-06T14:03:32.665Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-06T14:05:04.034Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-06T14:05:04.858Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-06T14:11:50.097Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-06T14:11:50.606Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","timestamp":"2024-08-06T14:29:20.750Z"}
{"level":"error","message":"Error in removeOrder: \nInvalid `prisma.order.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-06T14:29:41.259Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-07T13:52:58.530Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-10T10:38:37.045Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-10T13:45:07.365Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-10T15:07:39.429Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-10T15:10:03.511Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-10T15:10:48.794Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-10T15:11:04.057Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-11T09:00:17.319Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-11T09:02:51.022Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-11T09:04:40.423Z"}
{"level":"error","message":"Error in addProducts: \nInvalid `prisma.product.create()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-11T09:06:58.466Z"}
{"level":"error","message":"Error in addToCart: \nInvalid `prisma.product.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: ProductWhereInput | ProductWhereInput[],\n?   OR?: ProductWhereInput[],\n?   NOT?: ProductWhereInput | ProductWhereInput[],\n?   title?: StringFilter | String,\n?   price?: StringFilter | String,\n?   description?: StringFilter | String,\n?   image?: StringFilter | String,\n?   userId?: StringFilter | String,\n?   categoryId?: StringFilter | String,\n?   user?: UserRelationFilter | UserWhereInput,\n?   categories?: CategoryRelationFilter | CategoryWhereInput,\n?   ProductInOrder?: ProductInOrderListRelationFilter,\n?   CartProduct?: CartProductListRelationFilter\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-08-11T09:18:58.847Z"}
{"level":"error","message":"Error in addToCart: \nInvalid `prisma.cart.create()` invocation:\n\n{\n  data: {\n    userId: \"035e0e2b-64d1-4a1c-ad22-20dfe5fdf1fa\",\n    products: {\n      create: {\n        productId: \"a22d1825-c254-4de3-a0d4-52dc4908c9d1\",\n        quantity: \"2\",\n                  ~~~\n        total: NaN\n      }\n    }\n  }\n}\n\nArgument `quantity`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-08-11T09:20:08.592Z"}
{"level":"error","message":"Error in addToCart: \nInvalid `prisma.cart.create()` invocation:\n\n{\n  data: {\n    userId: \"035e0e2b-64d1-4a1c-ad22-20dfe5fdf1fa\",\n    products: {\n      create: {\n        productId: \"a22d1825-c254-4de3-a0d4-52dc4908c9d1\",\n        quantity: \"2\",\n                  ~~~\n        total: NaN\n      }\n    }\n  }\n}\n\nArgument `quantity`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-08-11T09:24:35.245Z"}
{"level":"error","message":"Error in addToCart: \nInvalid `prisma.cart.create()` invocation:\n\n{\n  data: {\n    userId: \"035e0e2b-64d1-4a1c-ad22-20dfe5fdf1fa\",\n    products: {\n      create: {\n        productId: \"a22d1825-c254-4de3-a0d4-52dc4908c9d1\",\n        quantity: 2,\n        total: NaN,\n+       product: {\n+         create: ProductCreateWithoutCartProductInput | ProductUncheckedCreateWithoutCartProductInput,\n+         connectOrCreate: ProductCreateOrConnectWithoutCartProductInput,\n+         connect: ProductWhereUniqueInput\n+       }\n      }\n    }\n  }\n}\n\nArgument `product` is missing.","timestamp":"2024-08-11T09:27:33.104Z"}
{"level":"error","message":"Error in addToCart: \nInvalid `prisma.cart.create()` invocation:\n\n{\n  data: {\n    userId: \"035e0e2b-64d1-4a1c-ad22-20dfe5fdf1fa\",\n    products: {\n      create: {\n        productId: \"a22d1825-c254-4de3-a0d4-52dc4908c9d1\",\n        quantity: 2,\n        total: NaN,\n+       product: {\n+         create: ProductCreateWithoutCartProductInput | ProductUncheckedCreateWithoutCartProductInput,\n+         connectOrCreate: ProductCreateOrConnectWithoutCartProductInput,\n+         connect: ProductWhereUniqueInput\n+       }\n      }\n    }\n  }\n}\n\nArgument `product` is missing.","timestamp":"2024-08-11T09:29:21.948Z"}
{"level":"error","message":"Error in addToCart: Cannot read properties of undefined (reading 'find')","timestamp":"2024-08-11T09:30:57.004Z"}
{"level":"error","message":"Error in addToCart: \nInvalid `prisma.cartProduct.create()` invocation:\n\n{\n  data: {\n    cartId: \"929fd0c8-d735-4ad7-a9f9-1e91eab67624\",\n    productId: \"a22d1825-c254-4de3-a0d4-52dc4908c9d1\",\n    quantity: 2,\n    total: NaN,\n+   cart: {\n+     create: CartCreateWithoutProductsInput | CartUncheckedCreateWithoutProductsInput,\n+     connectOrCreate: CartCreateOrConnectWithoutProductsInput,\n+     connect: CartWhereUniqueInput\n+   }\n  }\n}\n\nArgument `cart` is missing.","timestamp":"2024-08-11T09:32:02.410Z"}
{"level":"error","message":"Error in addOrder: \nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    productsInOrder: {\n      create: [\n        {\n          product: {\n            connect: {\n              id: \"a22d1825-c254-4de3-a0d4-52dc4908c9d1\"\n            }\n          },\n          quantity: 2,\n          total: 2000\n        }\n      ]\n    },\n    userId: \"035e0e2b-64d1-4a1c-ad22-20dfe5fdf1fa\",\n+   status: String\n  },\n  include: {\n    productsInOrder: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `status` is missing.","timestamp":"2024-08-11T11:01:58.725Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   userId?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-14T13:55:09.943Z"}
{"level":"error","message":"Error in addToCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   userId?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: true\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-14T13:55:19.670Z"}
{"level":"error","message":"Error in addToCart: Cannot read properties of undefined (reading 'find')","timestamp":"2024-08-15T14:31:59.204Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:01:33.938Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:01:35.749Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:01:47.140Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:01:47.495Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:01:58.530Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:01:58.865Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:02:03.944Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:02:04.556Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:02:04.866Z"}
{"level":"error","message":"Error in getCart: localStorage is not defined","timestamp":"2024-08-18T14:09:39.746Z"}
{"level":"error","message":"Error in addToCart: localStorage is not defined","timestamp":"2024-08-18T14:09:45.053Z"}
{"level":"error","message":"Error in getCart: \nInvalid `prisma.cart.findUnique()` invocation:\n\n{\n  where: {\n    userId: undefined,\n?   id?: String,\n?   AND?: CartWhereInput | CartWhereInput[],\n?   OR?: CartWhereInput[],\n?   NOT?: CartWhereInput | CartWhereInput[],\n?   user?: UserRelationFilter | UserWhereInput,\n?   products?: CartProductListRelationFilter\n  },\n  include: {\n    products: {\n      include: {\n        product: true\n      }\n    }\n  }\n}\n\nArgument `where` of type CartWhereUniqueInput needs at least one of `id` or `userId` arguments. Available options are marked with ?.","timestamp":"2024-08-18T14:16:00.228Z"}
=======
>>>>>>> dc82848e998dae7ca57a72fab5bde07f7c22e236
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T09:38:49.120Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T09:38:49.790Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T09:39:33.924Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T09:39:34.283Z"}
{"level":"error","message":"Error in editProducts: \nInvalid `prisma.product.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-08-23T10:25:13.725Z"}
{"level":"error","message":"Error in editProducts: \nInvalid `prisma.product.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-08-23T10:25:14.226Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T13:56:14.797Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T13:56:15.361Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T13:56:16.841Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T13:56:17.247Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:00:12.581Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:00:12.952Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:00:15.820Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:00:16.609Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:00:21.090Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:00:21.870Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:00:40.277Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:00:40.619Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:02:27.047Z"}
{"level":"error","message":"Error in removeProducts: \nInvalid `prisma.product.delete()` invocation:\n\n\nForeign key constraint failed on the field: `foreign key`","timestamp":"2024-08-23T14:02:27.362Z"}
